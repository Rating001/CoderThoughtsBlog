@using CoderThoughtsBlog.Models
@using CoderThoughtsBlog.Services
@using CoderThoughtsBlog.Enums
@using CoderThoughtsBlog.Services.Interfaces;
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common


@inject IImageService imageService

@model IPagedList<Post>

<div class="row">
    @foreach (var post in Model)
    {
        <div class="col-sm-2 col-lg-4 mt-3">
            <div class="card border-dark">
                <div class="card-body text-center">
                    <div class="bg-warning">
                        <hr class="card-hr" />
                        <h5 class="card-title">@post.Title</h5>
                        <hr class="card-hr" />
                    </div>
                    <div>
                        <p class="card-text">@post.Abstract</p>
                    </div>

                    <br />
                    <div class="text-center">
                        <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">Read More</a>
                    </div>

                </div>
                <img class="card-img-bottom" src="@imageService.DecodeImage(post.ImageData,  post.ContentType)" />
            </div>

        </div>
    }
</div>

<hr />

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("TagIndex", new { page = page, tag = ViewData["SearchTerm"] }),
            new PagedListRenderOptionsBase
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
    </div>
</div>




























@*@using CoderThoughtsBlog.Models
@using CoderThoughtsBlog.Services
@using CoderThoughtsBlog.Services.Interfaces
@using CoderThoughtsBlog.Enums;

@using Microsoft.AspNetCore.Identity;

@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@inject IImageService _imageService;
@inject UserManager<BlogUser> _userManager;

@model IPagedList<Post>;

@{
    ViewData["Title"] = "Coder Thoughts Blog";
}


<div class="row">

    @foreach (var post in Model)
    {
        //Is the logged in user the Author of this post?
        var isAuthor = false;
        if (User.Identity.IsAuthenticated)
        {
            isAuthor = (post.BlogUserId == _userManager.GetUserId(User));
        }

        <div class="col-sm-6 col-lg-4">
            <div class="card border-dark">

                <div class="card-body text-center">

                    <div class="bg-warning">
                        <hr class="card-hr" />
                        <h5 class="card-title">@post.Title</h5>
                        <hr class="card-hr" />
                    </div>

                    <div>
                        <p class="card-text">
                            @post.Abstract
                        </p>
                    </div>

                    <br />

                    <div class="text-center">
                        <a class="btn btn-dark btn-sm form-control mb-2" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">
                            Read Posts
                        </a>
                    </div>

                    @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                    {
                        <div class="text-center">
                            <a class="btn btn-dark form-control btn-sm mb-2" asp-action="Edit" asp-controller="Posts" asp-route-slug="@post.Slug">Edit Post</a>
                        </div>
                    }
                    <img class="card-img-top" src="@_imageService.DecodeImage(post.ImageData, post.ContentType)" />
                </div>

            </div>
        </div>
    }

</div>


<hr />

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("TagIndex",new { id = Model.FirstOrDefault().Id, page = page}),
        new PagedListRenderOptionsBase
        {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
        })
    </div>
</div>

@* id = Model.FirstOrDefault().BlogId, *@